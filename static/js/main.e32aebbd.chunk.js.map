{"version":3,"sources":["App.tsx","index.tsx"],"names":["getRandomInt","minn","maxx","min","Math","ceil","max","floor","random","generateVariations","Array","from","length","res","i","toString","toUpperCase","generateColor","App","useState","colorVariations","setColorVariations","result","setResult","trueColor","className","style","backgroundColor","map","color","type","onClick","handleButtonClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAMA,SAASA,EAAaC,EAAcC,GAClC,IAAMC,EAAMC,KAAKC,KAAKJ,GAChBK,EAAMF,KAAKG,MAAML,GAEvB,OAAOE,KAAKG,MAAMH,KAAKI,UAAYF,EAAMH,GAAOA,GAalD,SAASM,IAGP,OAFYC,MAAMC,KAAK,CAAEC,OAAQ,IAAK,kBAXxC,WAGE,IAFA,IAAIC,EAAM,IAEDC,EAAI,EAAGA,EAAI,EAAGA,GAAK,EAC1BD,GAAOb,EAAa,EAAG,KAAKe,SAAS,IAGvC,OAAOF,EAAIG,cAIiCC,MAKvC,IAAMC,EAAM,WACjB,MAA8CC,mBAASV,KAAvD,mBAAOW,EAAP,KAAwBC,EAAxB,KACA,EAA4BF,mBAAyB,MAArD,mBAAOG,EAAP,KAAeC,EAAf,KAEMC,EAAYJ,EAAgBpB,EAAa,EAAG,IAOlD,OACE,qBAAKyB,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,yBAEA,qBACEA,UAAU,kBACVC,MAAO,CAAEC,gBAAiBH,GAF5B,+BAOA,qBAAKC,UAAU,oBAAf,SACGL,EAAgBQ,KAAI,SAAAC,GAAK,OACxB,wBACEC,KAAK,SACLL,UAAU,eAEVM,QAAS,kBAvBK,SAACF,GACzBN,EAAUM,IAAUL,GACpBH,EAAmBZ,KAqBMuB,CAAkBH,IAJnC,SAMGA,GAHIA,QAQC,OAAXP,GACC,qBAAKG,UAAU,OAAf,SACGH,EACG,sBAAMG,UAAU,eAAhB,2BACA,sBAAMA,UAAU,eAAhB,mCChEhBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.e32aebbd.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/control-has-associated-label */\nimport React, {\n  useState,\n} from 'react';\nimport './App.scss';\n\nfunction getRandomInt(minn: number, maxx: number) {\n  const min = Math.ceil(minn);\n  const max = Math.floor(maxx);\n\n  return Math.floor(Math.random() * (max - min) + min);\n}\n\nfunction generateColor() {\n  let res = '#';\n\n  for (let i = 0; i < 3; i += 1) {\n    res += getRandomInt(0, 255).toString(16);\n  }\n\n  return res.toUpperCase();\n}\n\nfunction generateVariations() {\n  const arr = Array.from({ length: 3 }, () => generateColor());\n\n  return arr;\n}\n\nexport const App = () => {\n  const [colorVariations, setColorVariations] = useState(generateVariations());\n  const [result, setResult] = useState<boolean | null>(null);\n\n  const trueColor = colorVariations[getRandomInt(0, 2)];\n\n  const handleButtonClick = (color: string) => {\n    setResult(color === trueColor);\n    setColorVariations(generateVariations());\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <h1 className=\"title\">Color Guess</h1>\n\n        <div\n          className=\"color-container\"\n          style={{ backgroundColor: trueColor }}\n        >\n          What color is it?\n        </div>\n\n        <div className=\"buttons-container\">\n          {colorVariations.map(color => (\n            <button\n              type=\"button\"\n              className=\"color-button\"\n              key={color}\n              onClick={() => handleButtonClick(color)}\n            >\n              {color}\n            </button>\n          ))}\n        </div>\n\n        {result !== null && (\n          <div className=\"info\">\n            {result\n              ? <span className=\"right-answer\">You`re right!</span>\n              : <span className=\"wrong-answer\">Wrong answer!</span>}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}